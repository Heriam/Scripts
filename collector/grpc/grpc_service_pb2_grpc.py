# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_service_pb2 as grpc__service__pb2


class GrpcServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/grpc_service.GrpcService/Login',
        request_serializer=grpc__service__pb2.LoginRequest.SerializeToString,
        response_deserializer=grpc__service__pb2.LoginReply.FromString,
        )
    self.Logout = channel.unary_unary(
        '/grpc_service.GrpcService/Logout',
        request_serializer=grpc__service__pb2.LogoutRequest.SerializeToString,
        response_deserializer=grpc__service__pb2.LogoutReply.FromString,
        )
    self.SubscribeByStreamName = channel.unary_unary(
        '/grpc_service.GrpcService/SubscribeByStreamName',
        request_serializer=grpc__service__pb2.SubscribeRequest.SerializeToString,
        response_deserializer=grpc__service__pb2.SubscribeReply.FromString,
        )
    self.GetEventReport = channel.unary_stream(
        '/grpc_service.GrpcService/GetEventReport',
        request_serializer=grpc__service__pb2.GetReportRequest.SerializeToString,
        response_deserializer=grpc__service__pb2.ReportEvent.FromString,
        )


class GrpcServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Logout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeByStreamName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEventReport(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GrpcServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=grpc__service__pb2.LoginRequest.FromString,
          response_serializer=grpc__service__pb2.LoginReply.SerializeToString,
      ),
      'Logout': grpc.unary_unary_rpc_method_handler(
          servicer.Logout,
          request_deserializer=grpc__service__pb2.LogoutRequest.FromString,
          response_serializer=grpc__service__pb2.LogoutReply.SerializeToString,
      ),
      'SubscribeByStreamName': grpc.unary_unary_rpc_method_handler(
          servicer.SubscribeByStreamName,
          request_deserializer=grpc__service__pb2.SubscribeRequest.FromString,
          response_serializer=grpc__service__pb2.SubscribeReply.SerializeToString,
      ),
      'GetEventReport': grpc.unary_stream_rpc_method_handler(
          servicer.GetEventReport,
          request_deserializer=grpc__service__pb2.GetReportRequest.FromString,
          response_serializer=grpc__service__pb2.ReportEvent.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc_service.GrpcService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
